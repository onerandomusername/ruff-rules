name: main
on:
  schedule:
      # same schedule as ruff's own rule updates
    - cron: "0 */4 * * *"
  workflow_dispatch:
  repository_dispatch:
    types: ["update-rules"]

permissions: {}

jobs:
  build:
    name: main
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v5.0.0
        with:
          persist-credentials: true


      - name: Install ruff without running check or format
        uses: astral-sh/ruff-action@v3
        with:
          args: "--version"

      - name: Run ruff rule and save output
        run: ruff rule --all --output-format json > rules.json

      - name: Get ruff version
        id: ruff_version
        run: echo "version=$(ruff --version | awk '{print $2}')" >> $GITHUB_OUTPUT

      - name: set git config
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Check for rules.json changes
        id: rules_changed
        run: |
          if git diff --exit-code rules.json; then
            echo "changed=false" >> $GITHUB_OUTPUT
          else
            echo "changed=true" >> $GITHUB_OUTPUT
          fi

      - name: Commit and tag rules.json if changed
        if: steps.rules_changed.outputs.changed == 'true'
        run: |
          git add rules.json
          git commit -m "Update rules.json for ruff ${{ steps.ruff_version.outputs.version }}"
          git tag "ruff-${{ steps.ruff_version.outputs.version }}"
          git push origin HEAD:refs/heads/main
          git push origin HEAD:refs/heads/main --tags

